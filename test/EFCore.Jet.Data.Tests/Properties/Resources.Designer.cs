//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFrameworkCore.Jet.Data.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EntityFrameworkCore.Jet.Data.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ExecuteNonQuery==========
        ///CREATE TABLE [CheckIfTableExistsTable] (
        ///    [StudentId] int NOT NULL IDENTITY,
        ///    [Notes] text NULL,
        ///    [StudentName] varchar(50) NOT NULL,
        ///    CONSTRAINT [PK_Students] PRIMARY KEY ([StudentId])
        ///);
        ///
        ///
        ///ExecuteNonQuery==========
        ///DROP TABLE [CheckIfTableExistsTable]
        ///
        ///.
        /// </summary>
        internal static string CheckIfTableExistsTestQueries {
            get {
                return ResourceManager.GetString("CheckIfTableExistsTestQueries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ExecuteNonQuery==========
        ///CREATE TABLE [Company] (
        ///    [Id] int NOT NULL IDENTITY,
        ///    [CreatedOn] datetime NOT NULL,
        ///    [DeactivatedOn] datetime NULL,
        ///    [Discriminator] text NOT NULL,
        ///    [IsActive] bit NOT NULL,
        ///    [Name] text NULL,
        ///    [UpdatedOn] datetime NULL,
        ///    [CompanyId] int NULL,
        ///    [ContactId] int NULL,
        ///    [DocumentId] int NULL,
        ///    CONSTRAINT [PK_Company] PRIMARY KEY ([Id]),
        ///    CONSTRAINT [FK_Company_Company_CompanyId] FOREIGN KEY ([CompanyId]) REFERENCES [Company] ([Id]) ON [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InsertTestQueries {
            get {
                return ResourceManager.GetString("InsertTestQueries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ExecuteNonQuery==========
        ///CREATE TABLE [Students] (
        ///    [StudentId] int NOT NULL IDENTITY,
        ///    [Notes] text NULL,
        ///    [StudentName] varchar(50) NOT NULL,
        ///    CONSTRAINT [PK_Students] PRIMARY KEY ([StudentId])
        ///);
        ///
        ///ExecuteDbDataReader==========
        ///INSERT INTO [Students] ([Notes], [StudentName])
        ///VALUES (null, &apos;Student to update&apos;);
        ///SELECT [StudentId]
        ///FROM [Students]
        ///WHERE 1 = 1 AND [StudentId] = @@identity;
        ///
        ///ExecuteDbDataReader==========
        ///SELECT TOP 1 [s].[StudentId], [s].[Notes], [s].[StudentName]
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateTestQueries {
            get {
                return ResourceManager.GetString("UpdateTestQueries", resourceCulture);
            }
        }
    }
}
